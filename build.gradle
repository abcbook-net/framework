
/**
 * 自定义属性(字段)的定义
 */
ext {
    baseMybatisVersion = '0.0.2-SNAPSHOT'

    // spring
    springBootVersion = '2.0.3.RELEASE'

    // templates
    nekohtmlVersion = '1.9.22'

    // mybatis
    mybatisVersion = '1.3.1'
    druidVersion = '1.1.0'
    pageHelperVersion = '1.2.3'
    mybatisMapperVersion = '1.2.1'

    // mysql
    mysqlConnectorVersion = '5.1.44'

    // shiro
    shiroSpringVersion = '1.4.0'
    shiroEhcacheVersion = '1.4.0'
    shiroRedisVersion = '2.4.2.1-RELEASE'

    // other
    lombokVersion = '1.16.18'
    fastJsonVersion = '1.2.46'
    commonCodecVersion = '1.10'

}

/**
 * 所有项目的通用配置
 */
allprojects {
    group 'net.abcbook.framework'
    version '0.0.1-SNAPSHOT'

    /**
     * 加入插件
     */
    // java 编译的基础插件
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    // maven 编译的相关插件, 可以使用此插件发布到本地或远程仓库
    apply plugin: 'maven-publish'

    // eclipse 组件配置
    eclipse {
        classpath {
            downloadSources=true
        }
    }
    // 配合 maven-publish 插件, 定义的发布规则
    publishing {
        publications {
            MyPublish(MavenPublication) {
                from components.java
            }
        }
        repositories {
            maven {
                name 'MyRepo'
                url ""
            }
        }
    }
}

/**
 * 所有子项目的通用配置
 */
subprojects {

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    // 设定 maven 库的地址
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
    }

    //通用的 jar 文件
    dependencies {
        compile("org.projectlombok:lombok:${lombokVersion}")
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }
    // 编译时的相关配置
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}